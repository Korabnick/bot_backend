version: '3.9'

services:
  web:
    container_name: web
    build:
      dockerfile: ./Dockerfile
      context: .
    ports:
      - "8000:8000"
    command: scripts/web/startup.sh -m -l
    restart: on-failure
    env_file:
      - ./backend/core/.env
    volumes:
      - .:/code
    depends_on:
      web_db:
        condition: service_healthy
    networks:
      - count_calories

  web_db:
    container_name: web_db
    image: library/postgres:13.2
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=main_db
    restart: on-failure
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "main_db" ]
      interval: 5s
      retries: 5
    volumes:
      - ./scripts/postgres:/docker-entrypoint-initdb.d
    networks:
      - count_calories
    extra_hosts:
      - "host.docker.internal:host-gateway"

  redis:
    container_name: bot-redis
    image: redis:6.2.4
    ports:
      - "6385:6379"
    networks:
      - count_calories

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus_config.yml"
    ports:
      - "9090:9090"
    restart: unless-stopped
    depends_on:
      - web
    volumes:
      - ./prometheus:/etc/prometheus
    networks:
      - count_calories

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
    depends_on:
      - web
    networks:
      - count_calories

networks:
  count_calories:
    external: True